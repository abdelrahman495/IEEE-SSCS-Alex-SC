
STM32F103C8T6_Drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000130  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000558  08000130  08000130  00001130  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000688  08000690  00001690  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000688  08000688  00001690  2**0
                  CONTENTS
  4 .ARM          00000000  08000688  08000688  00001690  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000688  08000690  00001690  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000688  08000688  00001688  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  0800068c  0800068c  0000168c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000000  20000000  20000000  00001690  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000020  20000000  08000690  00002000  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000020  08000690  00002020  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  00001690  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000776  00000000  00000000  000016b9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000319  00000000  00000000  00001e2f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000000d8  00000000  00000000  00002148  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 00000091  00000000  00000000  00002220  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  000002ad  00000000  00000000  000022b1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   000005f8  00000000  00000000  0000255e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00003d04  00000000  00000000  00002b56  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  0000685a  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000238  00000000  00000000  000068a0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000006c  00000000  00000000  00006ad8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000130 <__do_global_dtors_aux>:
 8000130:	b510      	push	{r4, lr}
 8000132:	4c05      	ldr	r4, [pc, #20]	@ (8000148 <__do_global_dtors_aux+0x18>)
 8000134:	7823      	ldrb	r3, [r4, #0]
 8000136:	b933      	cbnz	r3, 8000146 <__do_global_dtors_aux+0x16>
 8000138:	4b04      	ldr	r3, [pc, #16]	@ (800014c <__do_global_dtors_aux+0x1c>)
 800013a:	b113      	cbz	r3, 8000142 <__do_global_dtors_aux+0x12>
 800013c:	4804      	ldr	r0, [pc, #16]	@ (8000150 <__do_global_dtors_aux+0x20>)
 800013e:	f3af 8000 	nop.w
 8000142:	2301      	movs	r3, #1
 8000144:	7023      	strb	r3, [r4, #0]
 8000146:	bd10      	pop	{r4, pc}
 8000148:	20000000 	.word	0x20000000
 800014c:	00000000 	.word	0x00000000
 8000150:	08000670 	.word	0x08000670

08000154 <frame_dummy>:
 8000154:	b508      	push	{r3, lr}
 8000156:	4b03      	ldr	r3, [pc, #12]	@ (8000164 <frame_dummy+0x10>)
 8000158:	b11b      	cbz	r3, 8000162 <frame_dummy+0xe>
 800015a:	4903      	ldr	r1, [pc, #12]	@ (8000168 <frame_dummy+0x14>)
 800015c:	4803      	ldr	r0, [pc, #12]	@ (800016c <frame_dummy+0x18>)
 800015e:	f3af 8000 	nop.w
 8000162:	bd08      	pop	{r3, pc}
 8000164:	00000000 	.word	0x00000000
 8000168:	20000004 	.word	0x20000004
 800016c:	08000670 	.word	0x08000670

08000170 <RCC_Init>:


#include "RCC_Interface.h"

void RCC_Init()
{
 8000170:	b480      	push	{r7}
 8000172:	af00      	add	r7, sp, #0
#if SYSTEM_CLOCK == RCC_HSI
	/* Enable HSI clock */
	SET_BIT(RCC->CR, 0);
 8000174:	4b21      	ldr	r3, [pc, #132]	@ (80001fc <RCC_Init+0x8c>)
 8000176:	681b      	ldr	r3, [r3, #0]
 8000178:	4a20      	ldr	r2, [pc, #128]	@ (80001fc <RCC_Init+0x8c>)
 800017a:	f043 0301 	orr.w	r3, r3, #1
 800017e:	6013      	str	r3, [r2, #0]
	/* Wait until the HSI clock ready flag is set */
	while (!GET_BIT(RCC->CR, 1));
 8000180:	bf00      	nop
 8000182:	4b1e      	ldr	r3, [pc, #120]	@ (80001fc <RCC_Init+0x8c>)
 8000184:	681b      	ldr	r3, [r3, #0]
 8000186:	f003 0302 	and.w	r3, r3, #2
 800018a:	2b00      	cmp	r3, #0
 800018c:	d0f9      	beq.n	8000182 <RCC_Init+0x12>
	/* Select SYSCLK source */
	CLR_BIT(RCC->CFGR, 0);
 800018e:	4b1b      	ldr	r3, [pc, #108]	@ (80001fc <RCC_Init+0x8c>)
 8000190:	685b      	ldr	r3, [r3, #4]
 8000192:	4a1a      	ldr	r2, [pc, #104]	@ (80001fc <RCC_Init+0x8c>)
 8000194:	f023 0301 	bic.w	r3, r3, #1
 8000198:	6053      	str	r3, [r2, #4]
	CLR_BIT(RCC->CFGR, 1);
 800019a:	4b18      	ldr	r3, [pc, #96]	@ (80001fc <RCC_Init+0x8c>)
 800019c:	685b      	ldr	r3, [r3, #4]
 800019e:	4a17      	ldr	r2, [pc, #92]	@ (80001fc <RCC_Init+0x8c>)
 80001a0:	f023 0302 	bic.w	r3, r3, #2
 80001a4:	6053      	str	r3, [r2, #4]
	/* Select SYSCLK source */
	CLR_BIT(RCC->CFGR, 0);
	SET_BIT(RCC->CFGR, 1);
#endif
	/* Check whether the clock source is chosen or not */
	while ((RCC->CFGR & (0b11 << 2)) != (RCC->CFGR & 0b11));
 80001a6:	bf00      	nop
 80001a8:	4b14      	ldr	r3, [pc, #80]	@ (80001fc <RCC_Init+0x8c>)
 80001aa:	685b      	ldr	r3, [r3, #4]
 80001ac:	f003 020c 	and.w	r2, r3, #12
 80001b0:	4b12      	ldr	r3, [pc, #72]	@ (80001fc <RCC_Init+0x8c>)
 80001b2:	685b      	ldr	r3, [r3, #4]
 80001b4:	f003 0303 	and.w	r3, r3, #3
 80001b8:	429a      	cmp	r2, r3
 80001ba:	d1f5      	bne.n	80001a8 <RCC_Init+0x38>

	/* AHB Prescaler */
	CLR_BIT(RCC->CFGR, 4);
 80001bc:	4b0f      	ldr	r3, [pc, #60]	@ (80001fc <RCC_Init+0x8c>)
 80001be:	685b      	ldr	r3, [r3, #4]
 80001c0:	4a0e      	ldr	r2, [pc, #56]	@ (80001fc <RCC_Init+0x8c>)
 80001c2:	f023 0310 	bic.w	r3, r3, #16
 80001c6:	6053      	str	r3, [r2, #4]
	CLR_BIT(RCC->CFGR, 5);
 80001c8:	4b0c      	ldr	r3, [pc, #48]	@ (80001fc <RCC_Init+0x8c>)
 80001ca:	685b      	ldr	r3, [r3, #4]
 80001cc:	4a0b      	ldr	r2, [pc, #44]	@ (80001fc <RCC_Init+0x8c>)
 80001ce:	f023 0320 	bic.w	r3, r3, #32
 80001d2:	6053      	str	r3, [r2, #4]
	CLR_BIT(RCC->CFGR, 6);
 80001d4:	4b09      	ldr	r3, [pc, #36]	@ (80001fc <RCC_Init+0x8c>)
 80001d6:	685b      	ldr	r3, [r3, #4]
 80001d8:	4a08      	ldr	r2, [pc, #32]	@ (80001fc <RCC_Init+0x8c>)
 80001da:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 80001de:	6053      	str	r3, [r2, #4]
	CLR_BIT(RCC->CFGR, 7);
 80001e0:	4b06      	ldr	r3, [pc, #24]	@ (80001fc <RCC_Init+0x8c>)
 80001e2:	685b      	ldr	r3, [r3, #4]
 80001e4:	4a05      	ldr	r2, [pc, #20]	@ (80001fc <RCC_Init+0x8c>)
 80001e6:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 80001ea:	6053      	str	r3, [r2, #4]
	RCC->CFGR |= (AHB_PRESCALER << 4);
 80001ec:	4b03      	ldr	r3, [pc, #12]	@ (80001fc <RCC_Init+0x8c>)
 80001ee:	4a03      	ldr	r2, [pc, #12]	@ (80001fc <RCC_Init+0x8c>)
 80001f0:	685b      	ldr	r3, [r3, #4]
 80001f2:	6053      	str	r3, [r2, #4]
}
 80001f4:	bf00      	nop
 80001f6:	46bd      	mov	sp, r7
 80001f8:	bc80      	pop	{r7}
 80001fa:	4770      	bx	lr
 80001fc:	40021000 	.word	0x40021000

08000200 <RCC_PeripheralEnable>:

void RCC_PeripheralEnable(Peripheral_t peripheral)
{
 8000200:	b480      	push	{r7}
 8000202:	b083      	sub	sp, #12
 8000204:	af00      	add	r7, sp, #0
 8000206:	4603      	mov	r3, r0
 8000208:	71fb      	strb	r3, [r7, #7]
	switch (peripheral)
 800020a:	79fb      	ldrb	r3, [r7, #7]
 800020c:	2b2f      	cmp	r3, #47	@ 0x2f
 800020e:	f200 81b5 	bhi.w	800057c <RCC_PeripheralEnable+0x37c>
 8000212:	a201      	add	r2, pc, #4	@ (adr r2, 8000218 <RCC_PeripheralEnable+0x18>)
 8000214:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000218:	080002d9 	.word	0x080002d9
 800021c:	080002e7 	.word	0x080002e7
 8000220:	080002f5 	.word	0x080002f5
 8000224:	08000303 	.word	0x08000303
 8000228:	08000311 	.word	0x08000311
 800022c:	0800031f 	.word	0x0800031f
 8000230:	0800032d 	.word	0x0800032d
 8000234:	0800033b 	.word	0x0800033b
 8000238:	08000349 	.word	0x08000349
 800023c:	08000357 	.word	0x08000357
 8000240:	08000365 	.word	0x08000365
 8000244:	08000373 	.word	0x08000373
 8000248:	08000381 	.word	0x08000381
 800024c:	0800038f 	.word	0x0800038f
 8000250:	0800039d 	.word	0x0800039d
 8000254:	080003ab 	.word	0x080003ab
 8000258:	080003b9 	.word	0x080003b9
 800025c:	080003c7 	.word	0x080003c7
 8000260:	080003d5 	.word	0x080003d5
 8000264:	080003e3 	.word	0x080003e3
 8000268:	080003f1 	.word	0x080003f1
 800026c:	080003ff 	.word	0x080003ff
 8000270:	0800040d 	.word	0x0800040d
 8000274:	0800041b 	.word	0x0800041b
 8000278:	08000429 	.word	0x08000429
 800027c:	08000437 	.word	0x08000437
 8000280:	08000445 	.word	0x08000445
 8000284:	08000453 	.word	0x08000453
 8000288:	08000461 	.word	0x08000461
 800028c:	0800046f 	.word	0x0800046f
 8000290:	0800047d 	.word	0x0800047d
 8000294:	0800048b 	.word	0x0800048b
 8000298:	08000499 	.word	0x08000499
 800029c:	080004a7 	.word	0x080004a7
 80002a0:	080004b5 	.word	0x080004b5
 80002a4:	080004c3 	.word	0x080004c3
 80002a8:	080004d1 	.word	0x080004d1
 80002ac:	080004df 	.word	0x080004df
 80002b0:	080004ed 	.word	0x080004ed
 80002b4:	080004fb 	.word	0x080004fb
 80002b8:	08000509 	.word	0x08000509
 80002bc:	08000517 	.word	0x08000517
 80002c0:	08000529 	.word	0x08000529
 80002c4:	08000537 	.word	0x08000537
 80002c8:	08000545 	.word	0x08000545
 80002cc:	08000553 	.word	0x08000553
 80002d0:	08000561 	.word	0x08000561
 80002d4:	0800056f 	.word	0x0800056f
	{
		/* AHB Peripherals */
		case RCC_DMA1_EN:
			SET_BIT(RCC->AHBENR, 0);
 80002d8:	4b92      	ldr	r3, [pc, #584]	@ (8000524 <RCC_PeripheralEnable+0x324>)
 80002da:	695b      	ldr	r3, [r3, #20]
 80002dc:	4a91      	ldr	r2, [pc, #580]	@ (8000524 <RCC_PeripheralEnable+0x324>)
 80002de:	f043 0301 	orr.w	r3, r3, #1
 80002e2:	6153      	str	r3, [r2, #20]
			break;
 80002e4:	e14b      	b.n	800057e <RCC_PeripheralEnable+0x37e>

		case RCC_DMA2_EN:
			SET_BIT(RCC->AHBENR, 1);
 80002e6:	4b8f      	ldr	r3, [pc, #572]	@ (8000524 <RCC_PeripheralEnable+0x324>)
 80002e8:	695b      	ldr	r3, [r3, #20]
 80002ea:	4a8e      	ldr	r2, [pc, #568]	@ (8000524 <RCC_PeripheralEnable+0x324>)
 80002ec:	f043 0302 	orr.w	r3, r3, #2
 80002f0:	6153      	str	r3, [r2, #20]
			break;
 80002f2:	e144      	b.n	800057e <RCC_PeripheralEnable+0x37e>

		case RCC_SRAM_EN:
			SET_BIT(RCC->AHBENR, 2);
 80002f4:	4b8b      	ldr	r3, [pc, #556]	@ (8000524 <RCC_PeripheralEnable+0x324>)
 80002f6:	695b      	ldr	r3, [r3, #20]
 80002f8:	4a8a      	ldr	r2, [pc, #552]	@ (8000524 <RCC_PeripheralEnable+0x324>)
 80002fa:	f043 0304 	orr.w	r3, r3, #4
 80002fe:	6153      	str	r3, [r2, #20]
			break;
 8000300:	e13d      	b.n	800057e <RCC_PeripheralEnable+0x37e>

		case RCC_FLITF_EN:
			SET_BIT(RCC->AHBENR, 4);
 8000302:	4b88      	ldr	r3, [pc, #544]	@ (8000524 <RCC_PeripheralEnable+0x324>)
 8000304:	695b      	ldr	r3, [r3, #20]
 8000306:	4a87      	ldr	r2, [pc, #540]	@ (8000524 <RCC_PeripheralEnable+0x324>)
 8000308:	f043 0310 	orr.w	r3, r3, #16
 800030c:	6153      	str	r3, [r2, #20]
			break;
 800030e:	e136      	b.n	800057e <RCC_PeripheralEnable+0x37e>

		case RCC_CRC_EN:
			SET_BIT(RCC->AHBENR, 6);
 8000310:	4b84      	ldr	r3, [pc, #528]	@ (8000524 <RCC_PeripheralEnable+0x324>)
 8000312:	695b      	ldr	r3, [r3, #20]
 8000314:	4a83      	ldr	r2, [pc, #524]	@ (8000524 <RCC_PeripheralEnable+0x324>)
 8000316:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800031a:	6153      	str	r3, [r2, #20]
			break;
 800031c:	e12f      	b.n	800057e <RCC_PeripheralEnable+0x37e>

		case RCC_FSMC_EN:
			SET_BIT(RCC->AHBENR, 8);
 800031e:	4b81      	ldr	r3, [pc, #516]	@ (8000524 <RCC_PeripheralEnable+0x324>)
 8000320:	695b      	ldr	r3, [r3, #20]
 8000322:	4a80      	ldr	r2, [pc, #512]	@ (8000524 <RCC_PeripheralEnable+0x324>)
 8000324:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8000328:	6153      	str	r3, [r2, #20]
			break;
 800032a:	e128      	b.n	800057e <RCC_PeripheralEnable+0x37e>

		case RCC_SDIO_EN:
			SET_BIT(RCC->AHBENR, 10);
 800032c:	4b7d      	ldr	r3, [pc, #500]	@ (8000524 <RCC_PeripheralEnable+0x324>)
 800032e:	695b      	ldr	r3, [r3, #20]
 8000330:	4a7c      	ldr	r2, [pc, #496]	@ (8000524 <RCC_PeripheralEnable+0x324>)
 8000332:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 8000336:	6153      	str	r3, [r2, #20]
			break;
 8000338:	e121      	b.n	800057e <RCC_PeripheralEnable+0x37e>

		/* APB2 Peripherals */
		case RCC_AFIO_EN:
			SET_BIT(RCC->APB2ENR, 0);
 800033a:	4b7a      	ldr	r3, [pc, #488]	@ (8000524 <RCC_PeripheralEnable+0x324>)
 800033c:	699b      	ldr	r3, [r3, #24]
 800033e:	4a79      	ldr	r2, [pc, #484]	@ (8000524 <RCC_PeripheralEnable+0x324>)
 8000340:	f043 0301 	orr.w	r3, r3, #1
 8000344:	6193      	str	r3, [r2, #24]
			break;
 8000346:	e11a      	b.n	800057e <RCC_PeripheralEnable+0x37e>

		case RCC_IOPA_EN:
			SET_BIT(RCC->APB2ENR, 2);
 8000348:	4b76      	ldr	r3, [pc, #472]	@ (8000524 <RCC_PeripheralEnable+0x324>)
 800034a:	699b      	ldr	r3, [r3, #24]
 800034c:	4a75      	ldr	r2, [pc, #468]	@ (8000524 <RCC_PeripheralEnable+0x324>)
 800034e:	f043 0304 	orr.w	r3, r3, #4
 8000352:	6193      	str	r3, [r2, #24]
			break;
 8000354:	e113      	b.n	800057e <RCC_PeripheralEnable+0x37e>

		case RCC_IOPB_EN:
			SET_BIT(RCC->APB2ENR, 3);
 8000356:	4b73      	ldr	r3, [pc, #460]	@ (8000524 <RCC_PeripheralEnable+0x324>)
 8000358:	699b      	ldr	r3, [r3, #24]
 800035a:	4a72      	ldr	r2, [pc, #456]	@ (8000524 <RCC_PeripheralEnable+0x324>)
 800035c:	f043 0308 	orr.w	r3, r3, #8
 8000360:	6193      	str	r3, [r2, #24]
			break;
 8000362:	e10c      	b.n	800057e <RCC_PeripheralEnable+0x37e>

		case RCC_IOPC_EN:
			SET_BIT(RCC->APB2ENR, 4);
 8000364:	4b6f      	ldr	r3, [pc, #444]	@ (8000524 <RCC_PeripheralEnable+0x324>)
 8000366:	699b      	ldr	r3, [r3, #24]
 8000368:	4a6e      	ldr	r2, [pc, #440]	@ (8000524 <RCC_PeripheralEnable+0x324>)
 800036a:	f043 0310 	orr.w	r3, r3, #16
 800036e:	6193      	str	r3, [r2, #24]
			break;
 8000370:	e105      	b.n	800057e <RCC_PeripheralEnable+0x37e>

		case RCC_IOPD_EN:
			SET_BIT(RCC->APB2ENR, 5);
 8000372:	4b6c      	ldr	r3, [pc, #432]	@ (8000524 <RCC_PeripheralEnable+0x324>)
 8000374:	699b      	ldr	r3, [r3, #24]
 8000376:	4a6b      	ldr	r2, [pc, #428]	@ (8000524 <RCC_PeripheralEnable+0x324>)
 8000378:	f043 0320 	orr.w	r3, r3, #32
 800037c:	6193      	str	r3, [r2, #24]
			break;
 800037e:	e0fe      	b.n	800057e <RCC_PeripheralEnable+0x37e>

		case RCC_IOPE_EN:
			SET_BIT(RCC->APB2ENR, 6);
 8000380:	4b68      	ldr	r3, [pc, #416]	@ (8000524 <RCC_PeripheralEnable+0x324>)
 8000382:	699b      	ldr	r3, [r3, #24]
 8000384:	4a67      	ldr	r2, [pc, #412]	@ (8000524 <RCC_PeripheralEnable+0x324>)
 8000386:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800038a:	6193      	str	r3, [r2, #24]
			break;
 800038c:	e0f7      	b.n	800057e <RCC_PeripheralEnable+0x37e>

		case RCC_IOPF_EN:
			SET_BIT(RCC->APB2ENR, 7);
 800038e:	4b65      	ldr	r3, [pc, #404]	@ (8000524 <RCC_PeripheralEnable+0x324>)
 8000390:	699b      	ldr	r3, [r3, #24]
 8000392:	4a64      	ldr	r2, [pc, #400]	@ (8000524 <RCC_PeripheralEnable+0x324>)
 8000394:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8000398:	6193      	str	r3, [r2, #24]
			break;
 800039a:	e0f0      	b.n	800057e <RCC_PeripheralEnable+0x37e>

		case RCC_IOPG_EN:
			SET_BIT(RCC->APB2ENR, 8);
 800039c:	4b61      	ldr	r3, [pc, #388]	@ (8000524 <RCC_PeripheralEnable+0x324>)
 800039e:	699b      	ldr	r3, [r3, #24]
 80003a0:	4a60      	ldr	r2, [pc, #384]	@ (8000524 <RCC_PeripheralEnable+0x324>)
 80003a2:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80003a6:	6193      	str	r3, [r2, #24]
			break;
 80003a8:	e0e9      	b.n	800057e <RCC_PeripheralEnable+0x37e>

		case RCC_ADC1_EN:
			SET_BIT(RCC->APB2ENR, 9);
 80003aa:	4b5e      	ldr	r3, [pc, #376]	@ (8000524 <RCC_PeripheralEnable+0x324>)
 80003ac:	699b      	ldr	r3, [r3, #24]
 80003ae:	4a5d      	ldr	r2, [pc, #372]	@ (8000524 <RCC_PeripheralEnable+0x324>)
 80003b0:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 80003b4:	6193      	str	r3, [r2, #24]
			break;
 80003b6:	e0e2      	b.n	800057e <RCC_PeripheralEnable+0x37e>

		case RCC_ADC2_EN:
			SET_BIT(RCC->APB2ENR, 10);
 80003b8:	4b5a      	ldr	r3, [pc, #360]	@ (8000524 <RCC_PeripheralEnable+0x324>)
 80003ba:	699b      	ldr	r3, [r3, #24]
 80003bc:	4a59      	ldr	r2, [pc, #356]	@ (8000524 <RCC_PeripheralEnable+0x324>)
 80003be:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 80003c2:	6193      	str	r3, [r2, #24]
			break;
 80003c4:	e0db      	b.n	800057e <RCC_PeripheralEnable+0x37e>

		case RCC_TIM1_EN:
			SET_BIT(RCC->APB2ENR, 11);
 80003c6:	4b57      	ldr	r3, [pc, #348]	@ (8000524 <RCC_PeripheralEnable+0x324>)
 80003c8:	699b      	ldr	r3, [r3, #24]
 80003ca:	4a56      	ldr	r2, [pc, #344]	@ (8000524 <RCC_PeripheralEnable+0x324>)
 80003cc:	f443 6300 	orr.w	r3, r3, #2048	@ 0x800
 80003d0:	6193      	str	r3, [r2, #24]
			break;
 80003d2:	e0d4      	b.n	800057e <RCC_PeripheralEnable+0x37e>

		case RCC_SPI1_EN:
			SET_BIT(RCC->APB2ENR, 12);
 80003d4:	4b53      	ldr	r3, [pc, #332]	@ (8000524 <RCC_PeripheralEnable+0x324>)
 80003d6:	699b      	ldr	r3, [r3, #24]
 80003d8:	4a52      	ldr	r2, [pc, #328]	@ (8000524 <RCC_PeripheralEnable+0x324>)
 80003da:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
 80003de:	6193      	str	r3, [r2, #24]
			break;
 80003e0:	e0cd      	b.n	800057e <RCC_PeripheralEnable+0x37e>

		case RCC_TIM8_EN:
			SET_BIT(RCC->APB2ENR, 13);
 80003e2:	4b50      	ldr	r3, [pc, #320]	@ (8000524 <RCC_PeripheralEnable+0x324>)
 80003e4:	699b      	ldr	r3, [r3, #24]
 80003e6:	4a4f      	ldr	r2, [pc, #316]	@ (8000524 <RCC_PeripheralEnable+0x324>)
 80003e8:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 80003ec:	6193      	str	r3, [r2, #24]
			break;
 80003ee:	e0c6      	b.n	800057e <RCC_PeripheralEnable+0x37e>

		case RCC_USART1_EN:
			SET_BIT(RCC->APB2ENR, 14);
 80003f0:	4b4c      	ldr	r3, [pc, #304]	@ (8000524 <RCC_PeripheralEnable+0x324>)
 80003f2:	699b      	ldr	r3, [r3, #24]
 80003f4:	4a4b      	ldr	r2, [pc, #300]	@ (8000524 <RCC_PeripheralEnable+0x324>)
 80003f6:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 80003fa:	6193      	str	r3, [r2, #24]
			break;
 80003fc:	e0bf      	b.n	800057e <RCC_PeripheralEnable+0x37e>

		case RCC_ADC3_EN:
			SET_BIT(RCC->APB2ENR, 15);
 80003fe:	4b49      	ldr	r3, [pc, #292]	@ (8000524 <RCC_PeripheralEnable+0x324>)
 8000400:	699b      	ldr	r3, [r3, #24]
 8000402:	4a48      	ldr	r2, [pc, #288]	@ (8000524 <RCC_PeripheralEnable+0x324>)
 8000404:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8000408:	6193      	str	r3, [r2, #24]
			break;
 800040a:	e0b8      	b.n	800057e <RCC_PeripheralEnable+0x37e>

		case RCC_TIM9_EN:
			SET_BIT(RCC->APB2ENR, 19);
 800040c:	4b45      	ldr	r3, [pc, #276]	@ (8000524 <RCC_PeripheralEnable+0x324>)
 800040e:	699b      	ldr	r3, [r3, #24]
 8000410:	4a44      	ldr	r2, [pc, #272]	@ (8000524 <RCC_PeripheralEnable+0x324>)
 8000412:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
 8000416:	6193      	str	r3, [r2, #24]
			break;
 8000418:	e0b1      	b.n	800057e <RCC_PeripheralEnable+0x37e>

		case RCC_TIM10_EN:
			SET_BIT(RCC->APB2ENR, 20);
 800041a:	4b42      	ldr	r3, [pc, #264]	@ (8000524 <RCC_PeripheralEnable+0x324>)
 800041c:	699b      	ldr	r3, [r3, #24]
 800041e:	4a41      	ldr	r2, [pc, #260]	@ (8000524 <RCC_PeripheralEnable+0x324>)
 8000420:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8000424:	6193      	str	r3, [r2, #24]
			break;
 8000426:	e0aa      	b.n	800057e <RCC_PeripheralEnable+0x37e>

		case RCC_TIM11_EN:
			SET_BIT(RCC->APB2ENR, 21);
 8000428:	4b3e      	ldr	r3, [pc, #248]	@ (8000524 <RCC_PeripheralEnable+0x324>)
 800042a:	699b      	ldr	r3, [r3, #24]
 800042c:	4a3d      	ldr	r2, [pc, #244]	@ (8000524 <RCC_PeripheralEnable+0x324>)
 800042e:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 8000432:	6193      	str	r3, [r2, #24]
			break;
 8000434:	e0a3      	b.n	800057e <RCC_PeripheralEnable+0x37e>

		/* APB1 Peripherals */
		case RCC_TIM2_EN:
			SET_BIT(RCC->APB1ENR, 0);
 8000436:	4b3b      	ldr	r3, [pc, #236]	@ (8000524 <RCC_PeripheralEnable+0x324>)
 8000438:	69db      	ldr	r3, [r3, #28]
 800043a:	4a3a      	ldr	r2, [pc, #232]	@ (8000524 <RCC_PeripheralEnable+0x324>)
 800043c:	f043 0301 	orr.w	r3, r3, #1
 8000440:	61d3      	str	r3, [r2, #28]
			break;
 8000442:	e09c      	b.n	800057e <RCC_PeripheralEnable+0x37e>

		case RCC_TIM3_EN:
			SET_BIT(RCC->APB1ENR, 1);
 8000444:	4b37      	ldr	r3, [pc, #220]	@ (8000524 <RCC_PeripheralEnable+0x324>)
 8000446:	69db      	ldr	r3, [r3, #28]
 8000448:	4a36      	ldr	r2, [pc, #216]	@ (8000524 <RCC_PeripheralEnable+0x324>)
 800044a:	f043 0302 	orr.w	r3, r3, #2
 800044e:	61d3      	str	r3, [r2, #28]
			break;
 8000450:	e095      	b.n	800057e <RCC_PeripheralEnable+0x37e>

		case RCC_TIM4_EN:
			SET_BIT(RCC->APB1ENR, 2);
 8000452:	4b34      	ldr	r3, [pc, #208]	@ (8000524 <RCC_PeripheralEnable+0x324>)
 8000454:	69db      	ldr	r3, [r3, #28]
 8000456:	4a33      	ldr	r2, [pc, #204]	@ (8000524 <RCC_PeripheralEnable+0x324>)
 8000458:	f043 0304 	orr.w	r3, r3, #4
 800045c:	61d3      	str	r3, [r2, #28]
			break;
 800045e:	e08e      	b.n	800057e <RCC_PeripheralEnable+0x37e>

		case RCC_TIM5_EN:
			SET_BIT(RCC->APB1ENR, 3);
 8000460:	4b30      	ldr	r3, [pc, #192]	@ (8000524 <RCC_PeripheralEnable+0x324>)
 8000462:	69db      	ldr	r3, [r3, #28]
 8000464:	4a2f      	ldr	r2, [pc, #188]	@ (8000524 <RCC_PeripheralEnable+0x324>)
 8000466:	f043 0308 	orr.w	r3, r3, #8
 800046a:	61d3      	str	r3, [r2, #28]
			break;
 800046c:	e087      	b.n	800057e <RCC_PeripheralEnable+0x37e>

		case RCC_TIM6_EN:
			SET_BIT(RCC->APB1ENR, 4);
 800046e:	4b2d      	ldr	r3, [pc, #180]	@ (8000524 <RCC_PeripheralEnable+0x324>)
 8000470:	69db      	ldr	r3, [r3, #28]
 8000472:	4a2c      	ldr	r2, [pc, #176]	@ (8000524 <RCC_PeripheralEnable+0x324>)
 8000474:	f043 0310 	orr.w	r3, r3, #16
 8000478:	61d3      	str	r3, [r2, #28]
			break;
 800047a:	e080      	b.n	800057e <RCC_PeripheralEnable+0x37e>

		case RCC_TIM7_EN:
			SET_BIT(RCC->APB1ENR, 5);
 800047c:	4b29      	ldr	r3, [pc, #164]	@ (8000524 <RCC_PeripheralEnable+0x324>)
 800047e:	69db      	ldr	r3, [r3, #28]
 8000480:	4a28      	ldr	r2, [pc, #160]	@ (8000524 <RCC_PeripheralEnable+0x324>)
 8000482:	f043 0320 	orr.w	r3, r3, #32
 8000486:	61d3      	str	r3, [r2, #28]
			break;
 8000488:	e079      	b.n	800057e <RCC_PeripheralEnable+0x37e>

		case RCC_TIM12_EN:
			SET_BIT(RCC->APB1ENR, 6);
 800048a:	4b26      	ldr	r3, [pc, #152]	@ (8000524 <RCC_PeripheralEnable+0x324>)
 800048c:	69db      	ldr	r3, [r3, #28]
 800048e:	4a25      	ldr	r2, [pc, #148]	@ (8000524 <RCC_PeripheralEnable+0x324>)
 8000490:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8000494:	61d3      	str	r3, [r2, #28]
			break;
 8000496:	e072      	b.n	800057e <RCC_PeripheralEnable+0x37e>

		case RCC_TIM13_EN:
			SET_BIT(RCC->APB1ENR, 7);
 8000498:	4b22      	ldr	r3, [pc, #136]	@ (8000524 <RCC_PeripheralEnable+0x324>)
 800049a:	69db      	ldr	r3, [r3, #28]
 800049c:	4a21      	ldr	r2, [pc, #132]	@ (8000524 <RCC_PeripheralEnable+0x324>)
 800049e:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80004a2:	61d3      	str	r3, [r2, #28]
			break;
 80004a4:	e06b      	b.n	800057e <RCC_PeripheralEnable+0x37e>

		case RCC_TIM14_EN:
			SET_BIT(RCC->APB1ENR, 8);
 80004a6:	4b1f      	ldr	r3, [pc, #124]	@ (8000524 <RCC_PeripheralEnable+0x324>)
 80004a8:	69db      	ldr	r3, [r3, #28]
 80004aa:	4a1e      	ldr	r2, [pc, #120]	@ (8000524 <RCC_PeripheralEnable+0x324>)
 80004ac:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80004b0:	61d3      	str	r3, [r2, #28]
			break;
 80004b2:	e064      	b.n	800057e <RCC_PeripheralEnable+0x37e>

		case RCC_WWDG_EN:
			SET_BIT(RCC->APB1ENR, 11);
 80004b4:	4b1b      	ldr	r3, [pc, #108]	@ (8000524 <RCC_PeripheralEnable+0x324>)
 80004b6:	69db      	ldr	r3, [r3, #28]
 80004b8:	4a1a      	ldr	r2, [pc, #104]	@ (8000524 <RCC_PeripheralEnable+0x324>)
 80004ba:	f443 6300 	orr.w	r3, r3, #2048	@ 0x800
 80004be:	61d3      	str	r3, [r2, #28]
			break;
 80004c0:	e05d      	b.n	800057e <RCC_PeripheralEnable+0x37e>

		case RCC_SPI2_EN:
			SET_BIT(RCC->APB1ENR, 14);
 80004c2:	4b18      	ldr	r3, [pc, #96]	@ (8000524 <RCC_PeripheralEnable+0x324>)
 80004c4:	69db      	ldr	r3, [r3, #28]
 80004c6:	4a17      	ldr	r2, [pc, #92]	@ (8000524 <RCC_PeripheralEnable+0x324>)
 80004c8:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 80004cc:	61d3      	str	r3, [r2, #28]
			break;
 80004ce:	e056      	b.n	800057e <RCC_PeripheralEnable+0x37e>

		case RCC_SPI3_EN:
			SET_BIT(RCC->APB1ENR, 15);
 80004d0:	4b14      	ldr	r3, [pc, #80]	@ (8000524 <RCC_PeripheralEnable+0x324>)
 80004d2:	69db      	ldr	r3, [r3, #28]
 80004d4:	4a13      	ldr	r2, [pc, #76]	@ (8000524 <RCC_PeripheralEnable+0x324>)
 80004d6:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 80004da:	61d3      	str	r3, [r2, #28]
			break;
 80004dc:	e04f      	b.n	800057e <RCC_PeripheralEnable+0x37e>

		case RCC_USART2_EN:
			SET_BIT(RCC->APB1ENR, 17);
 80004de:	4b11      	ldr	r3, [pc, #68]	@ (8000524 <RCC_PeripheralEnable+0x324>)
 80004e0:	69db      	ldr	r3, [r3, #28]
 80004e2:	4a10      	ldr	r2, [pc, #64]	@ (8000524 <RCC_PeripheralEnable+0x324>)
 80004e4:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 80004e8:	61d3      	str	r3, [r2, #28]
			break;
 80004ea:	e048      	b.n	800057e <RCC_PeripheralEnable+0x37e>

		case RCC_USART3_EN:
			SET_BIT(RCC->APB1ENR, 18);
 80004ec:	4b0d      	ldr	r3, [pc, #52]	@ (8000524 <RCC_PeripheralEnable+0x324>)
 80004ee:	69db      	ldr	r3, [r3, #28]
 80004f0:	4a0c      	ldr	r2, [pc, #48]	@ (8000524 <RCC_PeripheralEnable+0x324>)
 80004f2:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 80004f6:	61d3      	str	r3, [r2, #28]
			break;
 80004f8:	e041      	b.n	800057e <RCC_PeripheralEnable+0x37e>

		case RCC_UART4_EN:
			SET_BIT(RCC->APB1ENR, 19);
 80004fa:	4b0a      	ldr	r3, [pc, #40]	@ (8000524 <RCC_PeripheralEnable+0x324>)
 80004fc:	69db      	ldr	r3, [r3, #28]
 80004fe:	4a09      	ldr	r2, [pc, #36]	@ (8000524 <RCC_PeripheralEnable+0x324>)
 8000500:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
 8000504:	61d3      	str	r3, [r2, #28]
			break;
 8000506:	e03a      	b.n	800057e <RCC_PeripheralEnable+0x37e>

		case RCC_UART5_EN:
			SET_BIT(RCC->APB1ENR, 20);
 8000508:	4b06      	ldr	r3, [pc, #24]	@ (8000524 <RCC_PeripheralEnable+0x324>)
 800050a:	69db      	ldr	r3, [r3, #28]
 800050c:	4a05      	ldr	r2, [pc, #20]	@ (8000524 <RCC_PeripheralEnable+0x324>)
 800050e:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8000512:	61d3      	str	r3, [r2, #28]
			break;
 8000514:	e033      	b.n	800057e <RCC_PeripheralEnable+0x37e>

		case RCC_I2C1_EN:
			SET_BIT(RCC->APB1ENR, 21);
 8000516:	4b03      	ldr	r3, [pc, #12]	@ (8000524 <RCC_PeripheralEnable+0x324>)
 8000518:	69db      	ldr	r3, [r3, #28]
 800051a:	4a02      	ldr	r2, [pc, #8]	@ (8000524 <RCC_PeripheralEnable+0x324>)
 800051c:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 8000520:	61d3      	str	r3, [r2, #28]
			break;
 8000522:	e02c      	b.n	800057e <RCC_PeripheralEnable+0x37e>
 8000524:	40021000 	.word	0x40021000

		case RCC_I2C2_EN:
			SET_BIT(RCC->APB1ENR, 22);
 8000528:	4b17      	ldr	r3, [pc, #92]	@ (8000588 <RCC_PeripheralEnable+0x388>)
 800052a:	69db      	ldr	r3, [r3, #28]
 800052c:	4a16      	ldr	r2, [pc, #88]	@ (8000588 <RCC_PeripheralEnable+0x388>)
 800052e:	f443 0380 	orr.w	r3, r3, #4194304	@ 0x400000
 8000532:	61d3      	str	r3, [r2, #28]
			break;
 8000534:	e023      	b.n	800057e <RCC_PeripheralEnable+0x37e>

		case RCC_USB_EN:
			SET_BIT(RCC->APB1ENR, 23);
 8000536:	4b14      	ldr	r3, [pc, #80]	@ (8000588 <RCC_PeripheralEnable+0x388>)
 8000538:	69db      	ldr	r3, [r3, #28]
 800053a:	4a13      	ldr	r2, [pc, #76]	@ (8000588 <RCC_PeripheralEnable+0x388>)
 800053c:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 8000540:	61d3      	str	r3, [r2, #28]
			break;
 8000542:	e01c      	b.n	800057e <RCC_PeripheralEnable+0x37e>

		case RCC_CAN_EN:
			SET_BIT(RCC->APB1ENR, 25);
 8000544:	4b10      	ldr	r3, [pc, #64]	@ (8000588 <RCC_PeripheralEnable+0x388>)
 8000546:	69db      	ldr	r3, [r3, #28]
 8000548:	4a0f      	ldr	r2, [pc, #60]	@ (8000588 <RCC_PeripheralEnable+0x388>)
 800054a:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
 800054e:	61d3      	str	r3, [r2, #28]
			break;
 8000550:	e015      	b.n	800057e <RCC_PeripheralEnable+0x37e>

		case RCC_BKP_EN:
			SET_BIT(RCC->APB1ENR, 27);
 8000552:	4b0d      	ldr	r3, [pc, #52]	@ (8000588 <RCC_PeripheralEnable+0x388>)
 8000554:	69db      	ldr	r3, [r3, #28]
 8000556:	4a0c      	ldr	r2, [pc, #48]	@ (8000588 <RCC_PeripheralEnable+0x388>)
 8000558:	f043 6300 	orr.w	r3, r3, #134217728	@ 0x8000000
 800055c:	61d3      	str	r3, [r2, #28]
			break;
 800055e:	e00e      	b.n	800057e <RCC_PeripheralEnable+0x37e>

		case RCC_PWR_EN:
			SET_BIT(RCC->APB1ENR, 28);
 8000560:	4b09      	ldr	r3, [pc, #36]	@ (8000588 <RCC_PeripheralEnable+0x388>)
 8000562:	69db      	ldr	r3, [r3, #28]
 8000564:	4a08      	ldr	r2, [pc, #32]	@ (8000588 <RCC_PeripheralEnable+0x388>)
 8000566:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 800056a:	61d3      	str	r3, [r2, #28]
			break;
 800056c:	e007      	b.n	800057e <RCC_PeripheralEnable+0x37e>

		case RCC_DAC_EN:
			SET_BIT(RCC->APB1ENR, 29);
 800056e:	4b06      	ldr	r3, [pc, #24]	@ (8000588 <RCC_PeripheralEnable+0x388>)
 8000570:	69db      	ldr	r3, [r3, #28]
 8000572:	4a05      	ldr	r2, [pc, #20]	@ (8000588 <RCC_PeripheralEnable+0x388>)
 8000574:	f043 5300 	orr.w	r3, r3, #536870912	@ 0x20000000
 8000578:	61d3      	str	r3, [r2, #28]
			break;
 800057a:	e000      	b.n	800057e <RCC_PeripheralEnable+0x37e>

		default:
			break;
 800057c:	bf00      	nop
	}
}
 800057e:	bf00      	nop
 8000580:	370c      	adds	r7, #12
 8000582:	46bd      	mov	sp, r7
 8000584:	bc80      	pop	{r7}
 8000586:	4770      	bx	lr
 8000588:	40021000 	.word	0x40021000

0800058c <SysTick_Handler>:
	/* Start the counter */
	SYSTICK->CTRL |= (1 << 0);
}

void SysTick_Handler(void)
{
 800058c:	b580      	push	{r7, lr}
 800058e:	af00      	add	r7, sp, #0
	SYSTICK_callback();
 8000590:	4b08      	ldr	r3, [pc, #32]	@ (80005b4 <SysTick_Handler+0x28>)
 8000592:	681b      	ldr	r3, [r3, #0]
 8000594:	4798      	blx	r3
#if SYSTICK_INTERRUPT == SYSTICK_INTERRUPT_NON_PERIODIC
	/* Stop the counter */
	SYSTICK->CTRL &= ~(1 << 0);
 8000596:	4b08      	ldr	r3, [pc, #32]	@ (80005b8 <SysTick_Handler+0x2c>)
 8000598:	681b      	ldr	r3, [r3, #0]
 800059a:	4a07      	ldr	r2, [pc, #28]	@ (80005b8 <SysTick_Handler+0x2c>)
 800059c:	f023 0301 	bic.w	r3, r3, #1
 80005a0:	6013      	str	r3, [r2, #0]
	/* Disable the interrupt */
	SYSTICK->CTRL &= ~(1 << 1);
 80005a2:	4b05      	ldr	r3, [pc, #20]	@ (80005b8 <SysTick_Handler+0x2c>)
 80005a4:	681b      	ldr	r3, [r3, #0]
 80005a6:	4a04      	ldr	r2, [pc, #16]	@ (80005b8 <SysTick_Handler+0x2c>)
 80005a8:	f023 0302 	bic.w	r3, r3, #2
 80005ac:	6013      	str	r3, [r2, #0]
#endif
}
 80005ae:	bf00      	nop
 80005b0:	bd80      	pop	{r7, pc}
 80005b2:	bf00      	nop
 80005b4:	2000001c 	.word	0x2000001c
 80005b8:	e000e010 	.word	0xe000e010

080005bc <main>:

#include "../MCAL/RCC/RCC_Interface.h"
#include "../MCAL/GPIO/GPIO_Interface.h"

int main(void)
{
 80005bc:	b580      	push	{r7, lr}
 80005be:	b082      	sub	sp, #8
 80005c0:	af00      	add	r7, sp, #0
	RCC_Init();
 80005c2:	f7ff fdd5 	bl	8000170 <RCC_Init>
	RCC_PeripheralEnable(RCC_IOPA_EN);
 80005c6:	2008      	movs	r0, #8
 80005c8:	f7ff fe1a 	bl	8000200 <RCC_PeripheralEnable>
	/*
	RCC_PeripheralDisable(RCC_IOPA_EN);
	*/
	GPIO_Config_t led;

	led.mode = GPIO_MODE_INPUT_PU_PD;
 80005cc:	2302      	movs	r3, #2
 80005ce:	70bb      	strb	r3, [r7, #2]

    while (1)
 80005d0:	bf00      	nop
 80005d2:	e7fd      	b.n	80005d0 <main+0x14>

080005d4 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80005d4:	480d      	ldr	r0, [pc, #52]	@ (800060c <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80005d6:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80005d8:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80005dc:	480c      	ldr	r0, [pc, #48]	@ (8000610 <LoopForever+0x6>)
  ldr r1, =_edata
 80005de:	490d      	ldr	r1, [pc, #52]	@ (8000614 <LoopForever+0xa>)
  ldr r2, =_sidata
 80005e0:	4a0d      	ldr	r2, [pc, #52]	@ (8000618 <LoopForever+0xe>)
  movs r3, #0
 80005e2:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80005e4:	e002      	b.n	80005ec <LoopCopyDataInit>

080005e6 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80005e6:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80005e8:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80005ea:	3304      	adds	r3, #4

080005ec <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80005ec:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80005ee:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80005f0:	d3f9      	bcc.n	80005e6 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80005f2:	4a0a      	ldr	r2, [pc, #40]	@ (800061c <LoopForever+0x12>)
  ldr r4, =_ebss
 80005f4:	4c0a      	ldr	r4, [pc, #40]	@ (8000620 <LoopForever+0x16>)
  movs r3, #0
 80005f6:	2300      	movs	r3, #0
  b LoopFillZerobss
 80005f8:	e001      	b.n	80005fe <LoopFillZerobss>

080005fa <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80005fa:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80005fc:	3204      	adds	r2, #4

080005fe <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80005fe:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000600:	d3fb      	bcc.n	80005fa <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000602:	f000 f811 	bl	8000628 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000606:	f7ff ffd9 	bl	80005bc <main>

0800060a <LoopForever>:

LoopForever:
  b LoopForever
 800060a:	e7fe      	b.n	800060a <LoopForever>
  ldr   r0, =_estack
 800060c:	20005000 	.word	0x20005000
  ldr r0, =_sdata
 8000610:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000614:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000618:	08000690 	.word	0x08000690
  ldr r2, =_sbss
 800061c:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000620:	20000020 	.word	0x20000020

08000624 <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000624:	e7fe      	b.n	8000624 <ADC1_2_IRQHandler>
	...

08000628 <__libc_init_array>:
 8000628:	b570      	push	{r4, r5, r6, lr}
 800062a:	2600      	movs	r6, #0
 800062c:	4d0c      	ldr	r5, [pc, #48]	@ (8000660 <__libc_init_array+0x38>)
 800062e:	4c0d      	ldr	r4, [pc, #52]	@ (8000664 <__libc_init_array+0x3c>)
 8000630:	1b64      	subs	r4, r4, r5
 8000632:	10a4      	asrs	r4, r4, #2
 8000634:	42a6      	cmp	r6, r4
 8000636:	d109      	bne.n	800064c <__libc_init_array+0x24>
 8000638:	f000 f81a 	bl	8000670 <_init>
 800063c:	2600      	movs	r6, #0
 800063e:	4d0a      	ldr	r5, [pc, #40]	@ (8000668 <__libc_init_array+0x40>)
 8000640:	4c0a      	ldr	r4, [pc, #40]	@ (800066c <__libc_init_array+0x44>)
 8000642:	1b64      	subs	r4, r4, r5
 8000644:	10a4      	asrs	r4, r4, #2
 8000646:	42a6      	cmp	r6, r4
 8000648:	d105      	bne.n	8000656 <__libc_init_array+0x2e>
 800064a:	bd70      	pop	{r4, r5, r6, pc}
 800064c:	f855 3b04 	ldr.w	r3, [r5], #4
 8000650:	4798      	blx	r3
 8000652:	3601      	adds	r6, #1
 8000654:	e7ee      	b.n	8000634 <__libc_init_array+0xc>
 8000656:	f855 3b04 	ldr.w	r3, [r5], #4
 800065a:	4798      	blx	r3
 800065c:	3601      	adds	r6, #1
 800065e:	e7f2      	b.n	8000646 <__libc_init_array+0x1e>
 8000660:	08000688 	.word	0x08000688
 8000664:	08000688 	.word	0x08000688
 8000668:	08000688 	.word	0x08000688
 800066c:	0800068c 	.word	0x0800068c

08000670 <_init>:
 8000670:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000672:	bf00      	nop
 8000674:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000676:	bc08      	pop	{r3}
 8000678:	469e      	mov	lr, r3
 800067a:	4770      	bx	lr

0800067c <_fini>:
 800067c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800067e:	bf00      	nop
 8000680:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000682:	bc08      	pop	{r3}
 8000684:	469e      	mov	lr, r3
 8000686:	4770      	bx	lr
